name: Build and Deploy to Render Branch

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  packages: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'

    - name: Configure npm for installing packages
      run: |
        echo "@mahindar5:registry=https://npm.pkg.github.com" >> ~/.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
        echo "registry=https://registry.npmjs.org/" >> ~/.npmrc

    - name: Install dependencies
      run: npm ci && npm install @mahindar5/common-lib@latest
    
    - name: Build project
      run: npm run build
    
    - name: Configure Git and Deploy
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Create a temporary directory for deployment files
        mkdir -p ../deploy-temp
        
        # Copy only the files/folders needed for deployment (opt-in approach)
        cp -r build ../deploy-temp/
        cp package.json ../deploy-temp/ 2>/dev/null || echo "package.json not found, skipping"
        cp package-lock.json ../deploy-temp/ 2>/dev/null || echo "package-lock.json not found, skipping"
        # cp .gitignore ../deploy-temp/ 2>/dev/null || echo ".gitignore not found, skipping"
        
        # Create or switch to render-deploy-branch
        git checkout -B render-deploy-branch
        
        # Clear the branch (remove all tracked files)
        git rm -rf . 2>/dev/null || true
        
        # Copy deployment files to the branch
        cp -r ../deploy-temp/* . 2>/dev/null || true
        cp -r ../deploy-temp/.* . 2>/dev/null || true
        
        # Clean up temp directory
        rm -rf ../deploy-temp
        
        # Commit and push changes
        git add .
        git diff --staged --quiet || git commit -m "Deploy build from commit $(git rev-parse main | cut -c1-7)"
        
        # Push to render-deploy-branch
        git push origin render-deploy-branch --force
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}